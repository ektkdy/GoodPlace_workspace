<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">


	<resultMap type="Board" id="boardFaqResultSet">
		<id column="FAQNO" property="faqNo"/>
		<result column="FAQ_CATEGORY" property="faqCategory"/>
		<result column="FAQ_TITLE" property="faqTitle"/>
		<result column="FAQ_CONTENT" property="faqContent"/>
		<result column="FAQ_CREATE_DATE" property="faqCreateDate"/>
	</resultMap>
	
	<resultMap type="Board" id="boardNoticeResultSet">
		<id column="NONO" property="noNo"/>
		<result column="NOTICE_TITLE" property="noticeTitle"/>
		<result column="NOTICE_CONTENT" property="noticeContent"/>
		<result column="NOTICE_DATE" property="noticeDate"/>
		<result column="COUNT" property="count"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<resultMap type="Board" id="boardInquiryResultSet">
		<id column="INNO" property="inNo"/>
		<result column="RONO" property="roNo"/>
		<result column="RENO" property="reNo"/>
		<result column="RPNO" property="rpNo"/>
		<result column="USNO" property="userNo"/>
		<result column="CATEGORY" property="inqCategory"/>
		<result column="INQUERY_TITLE" property="inqTitle"/>
		<result column="INQUERY_CONTENT" property="inqContent"/>
		<result column="INQUERY_DATE" property="inqDate"/>
		<result column="RE_TITLE" property="inqReTitle"/>
		<result column="RE_CONTENT" property="inqReContent"/>
		<result column="RE_STATUS" property="inqReStatus"/>
		<result column="STATUS" property="inqStatus"/>
		<result column="ROOMS_TITLE" property="roomsTitle"/>
		<result column="EXP_TITLE" property="expTitle"/>
		<result column="REVIEW_TITLE" property="reTitle"/>
		<result column="EMAIL" property="email"/>
		<result column="rUSNO" property="userNoR"/>
		<result column="vUSNO" property="userNoV"/>
		<result column="eUSNO" property="userNoE"/>
		<result column="rEMAIL" property="emailR"/>
		<result column="vEMAIL" property="emailV"/>
		<result column="eEMAIL" property="emailE"/>
		<result column="rYC" property="yellowCardR"/>
		<result column="vYC" property="yellowCardV"/>
		<result column="eYC" property="yellowCardE"/>
		<result column="RPANO" property="partnerNoR"/>
		<result column="EPANO" property="partnerNoE"/>
		<result column="RPYC" property="yellowCardRp"/>
		<result column="EPYC" property="yellowCardEp"/>
	</resultMap>
	
	<resultMap type="Board" id="reviewResultSet">
		<id column="RENO" property="reNo"/>
		<result column="RONO" property="roNo"/>
		<result column="USNO" property="userNo"/>
		<result column="USER_NAME" property="userName"/>
		<result column="ROOMS_TITLE" property="roomsTitle"/>
		<result column="REVIEW_TITLE" property="reTitle"/>
		<result column="REVIEW_CONTENT" property="reContent"/>
		<result column="CREATE_DATE" property="reviewDate"/>
		<result column="SCORE" property="score"/>
		<result column="REPLY" property="reply"/>
		<result column="REPLY_DATE" property="replyDate"/>
		<result column="REPLY_STATUS" property="replyStatus"/>
		<result column="CONCEPT" property="concept"/>
		<result column="AGE" property="age"/>
		<result column="END_DAYS" property="endDays"/>
	</resultMap>
	
	<resultMap type="WishList" id="selectwishList">
		<id column="WISH_NO" property="wishNo"/>
		<result column="WISH_DATE" property="wishDate"/>
		<result column="USNO" property="userNo"/>
		<result column="userNo" property="roNo"/>
		<result column="EXNO" property="exNo"/>
	</resultMap>
	




	<!-- 진아  : faqCategory별 모든 제목 조회 -->
	<select id="selectFaqList" parameterType="string" resultMap="boardFaqResultSet">
		select *
		  from faq
		  where faq_category = #{faqCategory}	
	</select>
	
	<!-- 진아 : 숙소별 리뷰 조회 : 미완성 -->
	<select id="reviewListPerRoom" parameterType="_int" resultMap="reviewResultSet">
		SELECT *
		FROM REVIEW
		WHERE RONO = #{roNo}
		ORDER BY RENO
	</select>
	
	<!-- 진아 : 숙소별 리뷰 개수 조회 -->
	<select id="reviewListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE RONO = #{roNo}
	</select>
	
	<!-- 현영  -->
	<!-- FAQ -->
	<select id="aSelectFaqListCount" resultType="_int">
		select count(*)
		  from faq
	</select>
	
	<select id="aSelectFaqList" resultMap="boardFaqResultSet">
		select *
		  from faq
		 order by FAQNO desc
	</select>
	
	<insert id="insertFaq" parameterType="Board">
		insert into faq
		values(faqno.nextval, #{faqCategory}, #{faqTitle}, #{faqContent}, sysdate)
	</insert>

	
	
	<select id="selectFaq" parameterType="_int" resultMap="boardFaqResultSet">
		select *
		  from faq
		 where faqno= #{fno}
	</select>
	
	<update id="faqUpdate" parameterType="Board">
	
		update faq
		   set faq_category=#{faqCategory},
		       faq_title=#{faqTitle},
		       faq_content=#{faqContent}
		 where faqno=#{faqNo}
	
	</update>
	<delete id="faqDelete" parameterType="_int">
	
		delete 
		  from faq
		 where faqno=#{fno}
	
	</delete>
	
	<select id="faqSearchCount" parameterType="Board" resultType="_int">
		select count(*)
		  from faq
	 	<if test="searchSelect == 'searchOp0'">
			
		</if>
		<if test="searchSelect == 'searchOp1'">
			where FAQ_CATEGORY LIKE '%' || '일반' ||'%'
		</if>
		<if test="searchSelect == 'searchOp2'">
			where FAQ_CATEGORY LIKE '%' || '예약' ||'%'
		</if>
		<if test="searchSelect == 'searchOp3'">
			where FAQ_CATEGORY LIKE '%' || '취소' ||'%' OR FAQ_CATEGORY LIKE '%' || '환불' ||'%'
		</if>
		<if test="searchSelect == 'searchOp4'">
			where FAQ_CATEGORY LIKE '%' || '상품' ||'%'
		</if>
		<if test="searchSelect == 'searchOp5'">
			where FAQ_CATEGORY LIKE '%' || '파트너' ||'%'
		</if>
	</select>
	
	<select id="faqSearchList" parameterType="Board" resultMap="boardFaqResultSet">
		select *
		  from faq
	 	<if test="searchSelect == 'searchOp0'">
			
		</if>
		<if test="searchSelect == 'searchOp1'">
			where FAQ_CATEGORY LIKE '%' || '일반' ||'%'
		</if>
		<if test="searchSelect == 'searchOp2'">
			where FAQ_CATEGORY LIKE '%' || '예약' ||'%'
		</if>
		<if test="searchSelect == 'searchOp3'">
			where FAQ_CATEGORY LIKE '%' || '취소' ||'%' OR FAQ_CATEGORY LIKE '%' || '환불' ||'%'
		</if>
		<if test="searchSelect == 'searchOp4'">
			where FAQ_CATEGORY LIKE '%' || '상품' ||'%'
		</if>
		<if test="searchSelect == 'searchOp5'">
			where FAQ_CATEGORY LIKE '%' || '파트너' ||'%'
		</if>
		 order by FAQNO desc
	</select>
	
	
	<!-- 공지사항 -->
	<select id="aSelectNoticeListCount" resultType="_int">
		select count(*)
		  from notice
		 where status='Y'
	</select>
	
	<select id="aSelectNoticeList" resultMap="boardNoticeResultSet">
		select *
		  from notice
		 where status='Y'
		 order by NONO desc
	</select>
	
	<insert id="insertNotice" parameterType="Board">
		insert into notice
		values(nono.nextval, #{noticeTitle}, #{noticeContent}, sysdate, default, default)
	</insert>
	
	<update id="noticeIncreaseCount" parameterType="_int">
		update notice
		   set count = count + 1
		 where nono = #{nno} and status = 'Y'
	</update>
	
	<update id="noticeDelete" parameterType="_int">
		update notice
		   set status = 'N'
		 where nono = #{nno} and status = 'Y'
	</update>
	
	<select id="selectNotice" parameterType="_int" resultMap="boardNoticeResultSet">
		select *
		  from notice
		 where nono= #{nno} and status='Y'
	</select>
	
	<update id="noticeUpdate" parameterType="Board">
	
		update notice
		   set NOTICE_TITLE=#{noticeTitle},
		       NOTICE_CONTENT=#{noticeContent}
		 where nono=#{noNo}
	
	</update>
	
	<select id="noticeSearchCount" parameterType="Board" resultType="_int">
		select count(*)
		  from notice
		 where status='Y'
	 	<if test="searchSelect == 'searchOp1'">
			AND NOTICE_TITLE LIKE '%' || #{keyword} ||'%'
		</if>
		<if test="searchSelect == 'searchOp2'">
			AND NOTICE_CONTENT LIKE '%' || #{keyword} ||'%'
		</if>
		<if test="searchSelect == 'searchOp3'">
			AND NOTICE_TITLE LIKE '%' || #{keyword} ||'%' OR NOTICE_CONTENT LIKE '%' || #{keyword} ||'%'
		</if>
	</select>
	
	<select id="noticeSearchList" parameterType="Board" resultMap="boardNoticeResultSet">
		select *
		  from notice
		 where status='Y'
	 	<if test="searchSelect == 'searchOp1'">
			AND NOTICE_TITLE LIKE '%' || #{keyword} ||'%'
		</if>
		<if test="searchSelect == 'searchOp2'">
			AND NOTICE_CONTENT LIKE '%' || #{keyword} ||'%'
		</if>
		<if test="searchSelect == 'searchOp3'">
			AND NOTICE_TITLE LIKE '%' || #{keyword} ||'%' OR NOTICE_CONTENT '%' || #{keyword} ||'%'
		</if>
		 order by NONO desc
	</select>
	
	<!-- 1:1문의 -->
	
	<select id="aSelectInquiryListCount" resultType="_int">
		select count(*)
		  from INQUERY
         where category != 5
	</select>
	
	<select id="aSelectInquiryList" resultMap="boardInquiryResultSet">
        select *
		  from INQUERY
         where category != 5
		 order by inNO desc
	</select>
	
	<select id="selectInquiry" parameterType="_int" resultMap="boardInquiryResultSet">
        SELECT I.INNO, I.INQUERY_TITLE, I.CATEGORY, R.ROOMS_TITLE, E.EXP_TITLE, M.EMAIL, I.INQUERY_CONTENT, I.RE_CONTENT
		  FROM INQUERY I
		  LEFT JOIN ROOMS R ON(I.RONO = R.RONO)
          LEFT JOIN EXPERIENCE E ON(I.EXNO = E.EXNO)
		  LEFT JOIN MEMBER M ON(I.USNO = M.USNO)
		 WHERE INNO = #{ino}
	</select>
	
	<update id="inquiryUpdate" parameterType="Board">
	
		update INQUERY
		   set RE_CONTENT=#{inqReContent}
		 where INNO=#{inNo}
	
	</update>
	
	<update id="insertInquiry" parameterType="Board">
	
		update INQUERY
		   set RE_CONTENT=#{inqReContent},
		       RE_STATUS=2
		 where INNO=#{inNo}
	
	</update>
	
	<select id="inquirySearchCount" resultType="_int">
		select count(*)
		  from INQUERY
         where category != 5
         <choose>
         	<when test="searchSelect == 'searchOp1'">
				<if test="searchSelect2 == 'searchOp4'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp5'">
					and INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp6'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%' or INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
         	</when>
         	<when test="searchSelect == 'searchOp2'">
         		and RE_STATUS = 2
				<if test="searchSelect2 == 'searchOp4'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp5'">
					and INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp6'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%' or INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
         	</when>
         	<when test="searchSelect == 'searchOp3'">
         		and RE_STATUS = 1
				<if test="searchSelect2 == 'searchOp4'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp5'">
					and INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp6'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%' or INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
         	</when>
         </choose>
	</select>
	
	<select id="inquirySearchList" resultMap="boardInquiryResultSet">
        select *
		  from INQUERY
         where category != 5
         <choose>
         	<when test="searchSelect == 'searchOp1'">
				<if test="searchSelect2 == 'searchOp4'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp5'">
					and INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp6'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%' or INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
         	</when>
         	<when test="searchSelect == 'searchOp2'">
         		and RE_STATUS = 2
				<if test="searchSelect2 == 'searchOp4'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp5'">
					and INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp6'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%' or INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
         	</when>
         	<when test="searchSelect == 'searchOp3'">
         		and RE_STATUS = 1
				<if test="searchSelect2 == 'searchOp4'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp5'">
					and INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
				<if test="searchSelect2 == 'searchOp6'">
					and INQUERY_TITLE LIKE '%' || #{keyword} ||'%' or INQUERY_CONTENT LIKE '%' || #{keyword} ||'%'
				</if>
         	</when>
         </choose>
		 order by inNO desc
	</select>
	
	
	
	<select id="aSelectReportListCount" resultType="_int">
		select count(*)
		  from INQUERY
         where category = 5 and status = 'Y'
	</select>
	
	<select id="aSelectReportList" resultMap="boardInquiryResultSet">
		SELECT I.INNO, I.USNO, M.EMAIL, I.INQUERY_TITLE, I.INQUERY_DATE, REVIEW_TITLE, ROOMS_TITLE, EXP_TITLE, 
		R.USNO AS "rUSNO", V.USNO AS "vUSNO", E.USNO AS "eUSNO", 
		RM.EMAIL AS "rEMAIL", RM.YELLOW_CARD AS "rYC", VM.EMAIL AS "vEMAIL", VM.YELLOW_CARD AS "vYC", EM.EMAIL AS "eEMAIL", 
		EM.YELLOW_CARD AS "eYC", PRM.PANO AS "RPANO", PEM.PANO AS "EPANO", 
		PRM.PA_YELLOW_CARD AS "RPYC", PEM.PA_YELLOW_CARD AS "EPYC"
		FROM INQUERY I
		LEFT JOIN MEMBER M ON(I.USNO = M.USNO)
		LEFT JOIN ROOMS R ON(I.RONO=R.RONO)
		LEFT JOIN REVIEW V ON(I.RENO=V.RENO)
		LEFT JOIN EXPERIENCE E ON(I.EXNO=E.EXNO)
		LEFT JOIN MEMBER RM ON(R.USNO = RM.USNO)
		LEFT JOIN MEMBER VM ON(V.USNO = VM.USNO)
		LEFT JOIN MEMBER EM ON(E.USNO = EM.USNO)
		LEFT JOIN PARTNER PRM ON(RM.PANO = PRM.PANO)
        LEFT JOIN PARTNER PEM ON(EM.PANO = PEM.PANO)
		WHERE CATEGORY = 5 AND I.STATUS='Y'
		ORDER BY I.INNO DESC
	</select>
	
	<select id="selectReport" parameterType="_int" resultMap="boardInquiryResultSet">
	
		SELECT I.INNO, I.USNO, M.EMAIL, I.INQUERY_TITLE, I.INQUERY_CONTENT, I.INQUERY_DATE, 
		REVIEW_TITLE, ROOMS_TITLE, EXP_TITLE, R.USNO AS "rUSNO", V.USNO AS "vUSNO", E.USNO AS "eUSNO", 
		RM.EMAIL AS "rEMAIL", RM.YELLOW_CARD AS "rYC", VM.EMAIL AS "vEMAIL", VM.YELLOW_CARD AS "vYC", 
		EM.EMAIL AS "eEMAIL", EM.YELLOW_CARD AS "eYC", PRM.PANO AS "RPANO", PEM.PANO AS "EPANO", 
		PRM.PA_YELLOW_CARD AS "RPYC", PEM.PA_YELLOW_CARD AS "EPYC"
		FROM INQUERY I
		LEFT JOIN MEMBER M ON(I.USNO = M.USNO)
		LEFT JOIN ROOMS R ON(I.RONO=R.RONO)
		LEFT JOIN REVIEW V ON(I.RENO=V.RENO)
		LEFT JOIN EXPERIENCE E ON(I.EXNO=E.EXNO)
		LEFT JOIN MEMBER RM ON(R.USNO = RM.USNO)
		LEFT JOIN MEMBER VM ON(V.USNO = VM.USNO)
		LEFT JOIN MEMBER EM ON(E.USNO = EM.USNO)
		LEFT JOIN PARTNER PRM ON(RM.PANO = PRM.PANO)
        LEFT JOIN PARTNER PEM ON(EM.PANO = PEM.PANO)
		WHERE CATEGORY = 5 AND I.STATUS='Y' AND INNO = #{rno}
	
	</select>
	
	<update id="reportDelete" parameterType="_int">
	
		update INQUERY
		   set STATUS='N'
		 where INNO=#{ino}
	
	</update>
	
	<update id="yellowCardPlus" parameterType="Board">
	
		<choose>
		    <when test="partnerNoR != 0">
					update PARTNER
				<choose>
				    <when test="yellowCardRp lt 2">
						   set PA_YELLOW_CARD = PA_YELLOW_CARD + 1
					</when>
					<otherwise>
						   set PARTNER_STATUS = 'N', PA_YELLOW_CARD = PA_YELLOW_CARD + 1
					</otherwise>
				</choose>
					 where PANO= #{partnerNoR}
		    </when>
		    <when test="partnerNoE != 0">
					update PARTNER
				<choose>
				    <when test="yellowCardEp lt 2">
						   set PA_YELLOW_CARD = PA_YELLOW_CARD + 1
					</when>
					<otherwise>
						   set PARTNER_STATUS = 'N', PA_YELLOW_CARD = PA_YELLOW_CARD + 1
					</otherwise>
				</choose>
					 where PANO= #{partnerNoE}
		    </when>
		    <when test="userNoV != 0">
					update MEMBER
				<choose>
				    <when test="yellowCardV lt 2">
						   set YELLOW_CARD = YELLOW_CARD + 1
					</when>
					<otherwise>
						   set STATUS = 'N', YELLOW_CARD = YELLOW_CARD + 1
					</otherwise>
				</choose>
					 where USNO = #{userNoV}
		    </when>
		</choose>
	
	</update>
	
	<select id="aReplyCount" resultType="_int">
		select count(*)
	   	  FROM REVIEW RE
		  JOIN MEMBER M ON(M.USNO = RE.USNO)
		  JOIN ROOMS R ON(R.RONO = RE.RONO)
         ORDER BY CREATE_DATE DESC
	</select>
	
	<select id="aReplyList" resultMap="reviewResultSet">
		SELECT RENO, RE.RONO, M.USNO, R.ROOMS_TITLE, USER_NAME, REVIEW_TITLE, REVIEW_CONTENT, 
			   CREATE_DATE, SCORE, REPLY_DATE,REPLY_STATUS, REPLY, M.CHANGE_NAME 
	   	  FROM REVIEW RE
		  JOIN MEMBER M ON(M.USNO = RE.USNO)
		  JOIN ROOMS R ON(R.RONO = RE.RONO)
         ORDER BY CREATE_DATE DESC
	</select>
	
	<select id="aReplyDetail" resultMap="reviewResultSet">
         SELECT RE.RENO, RE.SCORE, RP.END_DAYS, RE.CREATE_DATE, RP.CONCEPT, RE.REVIEW_TITLE, RE.REVIEW_CONTENT, RE.REPLY,
		        ME.USER_NAME, ME.CHANGE_NAME, TRUNC(TO_CHAR(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTHDATE, 1, 4), 'YYYY')))/12, -1) AGE
         FROM REVIEW RE
         JOIN ROOMS RO ON(RE.RONO = RO.RONO)
         JOIN ROOMSPAY RP ON(RO.RONO = RP.RONO)
         JOIN MEMBER ME ON(RP.USNO = ME.USNO)
         WHERE RE.RENO= #{reNo}
	</select>
	
	
	<!-- 현영  -->	
	
	
	
	
	
	
	<!-- 하정 -->
	<select id="pSelectNoticeListCount" resultType="_int">
		select count(*)
		  from notice
		 where status='Y'
	</select>
	
	<select id="pSelectNoticeList" resultMap="boardNoticeResultSet">
		select *
		  from notice
		 where status='Y'
		 order by nono desc
	</select>
	
	<select id="pSelectNoticeDetail" parameterType="_int" resultMap="boardNoticeResultSet">
		select *
		  from (select nono, notice_title, notice_content, notice_date,
       			lag(nono, 1, 0) over(order by nono) as prevNoNo, 
       			lag(notice_title, 1, '이전글이 없습니다') over(order by nono) as prevTitle, 
       			lead(nono, 1, 0) over(order by nono) as nextNoNo, 
       			lead(notice_title, 1, '다음글이 없습니다') over(order by nono) as nextTitle
				from notice order by nono)
		 where nono= #{noNo}
	</select>
	
	<update id="pNoticeIncreaseCount" parameterType="_int">
		update notice
		   set count = count + 1
		 where nono = #{noNo} and status = 'Y'
	</update>
	
	<!-- /하정 -->
	
	
	
	<!-- 기하 partner review -->
	<!-- 답글전 리뷰 리스트 조회 -->
	<select id="selectReviewCount1" parameterType="_int" resultType="_int">
		select count(*)
		  from review
		 where rono in(select rono
		 				 from rooms
		 				where usno= #{userNo})
		   and reply_status = 'N'
	</select>
	
	<!-- 답글후 리뷰 리스트 조회 -->
	<select id="selectReviewCount2" parameterType="_int" resultType="_int">
		select count(*)
		  from review
		 where rono in(select rono
		 				 from rooms
		 				where usno= #{userNo})
		   and reply_status = 'Y'
	</select>
	<!-- 답글 전 조회용 -->
	<select id="reviewList1" parameterType="_int" resultMap="reviewResultSet" >
		SELECT RENO, RE.RONO, M.USNO, R.ROOMS_TITLE, USER_NAME, REVIEW_TITLE, REVIEW_CONTENT, 
			   CREATE_DATE, SCORE, REPLY_DATE,REPLY_STATUS, REPLY, M.CHANGE_NAME 
	   	  FROM REVIEW RE
		  JOIN MEMBER M ON(M.USNO = RE.USNO)
		  JOIN ROOMS R ON(R.RONO = RE.RONO)
		 WHERE RE.RONO IN(SELECT R.RONO
                            FROM ROOMS 
                           WHERE R.USNO = #{userNo})
           AND REPLY_STATUS = 'N'
         ORDER BY CREATE_DATE DESC
	</select>
	<!-- 답글 후 조회용 -->
	<select id="reviewList2" parameterType="_int" resultMap="reviewResultSet" >
		SELECT RENO, RE.RONO, M.USNO, R.ROOMS_TITLE, USER_NAME, REVIEW_TITLE, REVIEW_CONTENT, 
			   CREATE_DATE, SCORE, REPLY_DATE,REPLY_STATUS, REPLY, M.CHANGE_NAME 
	   	  FROM REVIEW RE
		  JOIN MEMBER M ON(M.USNO = RE.USNO)
		  JOIN ROOMS R ON(R.RONO = RE.RONO)
		 WHERE RE.RONO IN(SELECT R.RONO
                            FROM ROOMS 
                           WHERE R.USNO = #{userNo})
           AND REPLY_STATUS = 'Y'
           ORDER BY REPLY_DATE DESC
	</select>
	
	<select id="selectReview" parameterType="_int" resultMap="reviewResultSet">
		 SELECT RENO, SCORE, END_DAYS, CREATE_DATE, CONCEPT, REVIEW_TITLE, REVIEW_CONTENT, REPLY,
		        USER_NAME, CHANGE_NAME, TRUNC(TO_CHAR(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(BIRTHDATE, 1, 4), 'YYYY')))/12, -1) AGE
		  FROM REVIEW RE
		  LEFT JOIN ROOMSPAY R ON(RE.USNO = r.USNO)
		  JOIN MEMBER M ON(R.USNO = M.USNO)
		 WHERE RE.RENO= ${reNo}
	</select>
	
	<update id="insertReply" parameterType="Board">
		UPDATE REVIEW 
		   SET REPLY_DATE = SYSDATE,
		   	   REPLY_STATUS = 'Y',
		   	   REPLY = #{reply}
	 	 WHERE RENO = #{reNo}
	</update>
	
	<!-- /기하 partner review -->
	
	<!-- 현우 -->
	<select id="selectwishList" resultMap="selectwishList" parameterType="Member">
		select  
	</select>
	
	

</mapper>
