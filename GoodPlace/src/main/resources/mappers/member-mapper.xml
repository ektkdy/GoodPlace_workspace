<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<resultMap id="memberResultSet" type="Member">
		<id column="USNO" property="usNo"/>
		<result column="PANO" property="paNo"/>
		<result column="EMAIL" property="email"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="USER_NAME" property="userName"/>
		<result column="PHONE" property="phone"/>
		<result column="POINT" property="point"/>
		<result column="USER_KIND" property="userKind"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="STATUS" property="status"/>
		<result column="YELLOW_CARD" property="yellowCard"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILE_PATH" property="filePath"/>

		<result column="PARTNER_INTRO" property="partnerIntro"/>
		<result column="PA_ENROLL_DATE" property="paEnrollDate"/>
		<result column="ACCOUNT_NAME" property="accountName"/>
		<result column="ACCOUNT_NUM" property="accountNum"/>
		<result column="PRE_MSG" property="preMsg"/>
		<result column="PA_YELLOW_CARD" property="paYellowCard"/>
		<result column="PARTNER_STATUS" property="partnerStatus"/>
	</resultMap>

	<insert id="insertMember" parameterType="Member">
		insert into MEMBER
		values(usno.nextval, null, #{email}, #{userPwd}, #{userName},
				<choose>
					<when test="phone != null">
					#{phone},
					</when>
					<otherwise>
					NULL,
					</otherwise>
				</choose>
				
				0, 1, SYSDATE, 'Y', 0,NULL,'default.jpg',NULL)
	</insert>
	
	<select id="loginMember" resultMap="memberResultSet" parameterType="Member">
		select *
		  from Member
	 left join partner using(pano)
		 where email = #{email}
		   and status = 'Y'
	</select>

	<select id="emailCheck" parameterType="string" resultType="_int">
		select count(*)
		  from member
		 where email=#{email}
	</select>

	<update id="updatePwd" parameterType="Member">
		update member
		   set user_pwd = #{userPwd}
		 where email = #{email}
	</update>

	<update id="updatePartnerNo" parameterType="Member">
		update member
		   set paNo = pano.currval,
		   	   user_kind = 2,
		   	   origin_name = #{originName},
		   	   change_name = #{changeName}
		 where usNo = #{usNo}
	</update>
	
	<insert id="insertPartner" parameterType="Member">
		insert into partner
		values(pano.nextval,#{partnerIntro},SYSDATE,null,null,null,default,'N')
	</insert>


















	<update id="updateMemberAccount" parameterType="Member">
		update member
		   set phone=#{phone}, 
		   	   origin_name = #{originName},
		   	   change_name = #{changeName}
		 where pano=#{paNo}
	</update>

	<update id="updatePartnerAccount" parameterType="Member">
		update partner 
		   set partner_intro=#{partnerIntro},
		   	   account_name=#{accountName}, 
		   	   account_num=#{accountNum},
			   pre_msg=#{preMsg}
		 where pano=#{paNo}
	</update>





	<!-- 관리자 -->
	<select id="aSelectMemberListCount" resultType="_int">
		select count(*)
		  from member
		 where user_kind=1
	</select>
	
	<select id="aSelectMemberList" resultMap="memberResultSet">
		select *
		  from member
		 where user_kind=1
		 order by usno asc
	</select>
	
	<update id="updateBlockMemberOn" parameterType="_int">
		update member
		   set status = 'N'
		 where usNo = #{mno}
	</update>
	
	<update id="updateBlockMemberOff" parameterType="_int">
		update member
		   set status = 'Y'
		 where usNo = #{mno}
	</update>


	<select id="aSelectPartnerListCount" resultType="_int">
         select count(*)
         from member
         where user_kind=2
	</select>

	<select id="aSelectPartnerList" resultMap="memberResultSet">
         select DISTINCT USNO, PANO, EMAIL, USER_NAME, PHONE, PA_ENROLL_DATE, PARTNER_STATUS
         from member
         join partner using(pano)
         where user_kind=2
	</select>

	<update id="updateBlockPartnerOn" parameterType="_int">
		update partner
		   set PARTNER_STATUS = 'N'
		 where paNo = #{ptno}
	</update>
	
	<update id="updateBlockPartnerOff" parameterType="_int">
		update partner
		   set PARTNER_STATUS = 'Y'
		 where paNo = #{ptno}
	</update>
	
	<resultMap id="partnerExpResultSet" type="Experience">
		<id column="EXNO" property="exNo"/>
		<result column="EXP_TITLE" property="expTitle"/>
		<result column="ADD_BASIC" property="addBasic"/>
		<result column="START_DATE" property="startDate"/>
		<result column="STATUS" property="status"/>
	</resultMap>


	<resultMap id="partnerRoomResultSet" type="Room">
		<id column="RONO" property="roNo"/>
		<result column="ROOMS_TITLE" property="roomsTitle"/>
		<result column="ADD_BASIC" property="addBasic"/>
		<result column="START_DATE" property="startDate"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<select id="aSelectPartnerMember" parameterType="_int" resultMap="memberResultSet">
		SELECT *
		  FROM PARTNER
		  JOIN MEMBER USING(PANO)
		  WHERE USNO=#{ptno}
	</select>
	
	<select id="aSelectPartnerRoom" parameterType="_int" resultMap="partnerRoomResultSet">
		SELECT RONO, ROOMS_TITLE, ADD_BASIC, START_DATE, STATUS
		  FROM ROOMS
		 WHERE USNO=#{ptno}
	</select>
	
	<select id="aSelectPartnerExp" parameterType="_int" resultMap="partnerExpResultSet">
		SELECT EXNO, EXP_TITLE, ADD_BASIC, START_DATE, STATUS
		  FROM EXPERIENCE
		 WHERE USNO=#{ptno}
	</select>


</mapper>
