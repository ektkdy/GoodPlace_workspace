<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="roomMapper">
	<resultMap type="Room" id="roomResultSet">
		<id column="RONO" property="roNo"/>
		<result column="USNO" property="userNo"/>
		<result column="ROOMS_TITLE" property="roomsTitle"/>
		<result column="MIN_PEOPLE" property="minPeople"/>
		<result column="MAX_PEOPLE" property="maxPeople"/>
		<result column="PRICE" property="price"/>
		<result column="ADD_PRICE" property="addPrice"/>
		<result column="ROOMS_NOTICE" property="roomsNotice"/>
		<result column="ROOMS_TAG" property="roomsTag"/>
		<result column="ROOM_COUNT" property="roomCount"/>
		<result column="BED_COUNT" property="bedCount"/>
		<result column="BATH_COUNT" property="bathCount"/>
		<result column="RESTROOM_COUNT" property="restroomCount"/>
		<result column="FACILITY" property="facility"/>
		<result column="SERVICE" property="service"/>
		<result column="MEAL" property="meal"/>
		<result column="DENY" property="deny"/>
		<result column="DENY_CONTENT" property="denyContent"/>
		<result column="ADD_BASIC" property="addBasic"/>
		<result column="ADD_DETAIL" property="addDetail"/>
		<result column="ADD_REF" property="addRef"/>
		<result column="ZIP_CODE" property="zipCode"/>
		<result column="APPLY_DATE" property="applyDate"/>
		<result column="START_DATE" property="startDate"/>
		<result column="END_DATE" property="endDate"/>
		<result column="OPERATE_DAY" property="operateDay"/>
		<result column="PONO" property="poNo"/>
		<result column="POWER_START" property="powerStart"/>
		<result column="POWER_END" property="powerEnd"/>
		<result column="STATUS" property="status"/>
		<result column="CHECK_IN" property="checkIn"/>
		<result column="CHECK_OUT" property="checkOut"/>
		<result column="DEADLINE" property="deadline"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="RPNO" property="rpNo"/>
		<result column="POWER_KIND" property="powerKind"/>
		<result column="PERIOD" property="period"/>
		<result column="PRICE" property="powerPrice"/>
	</resultMap>
	
	
	<resultMap type="Room" id="powerResultSet">
		<id column="PONO" property="poNo"/>
		<result column="POWER_KIND" property="powerKind"/>
		<result column="PERIOD" property="period"/>
		<result column="PRICE" property="powerPrice"/>
		
		<result column="ROOMS_TITLE" property="roomsTitle"/>
		<result column="EMAIL" property="email"/>
		<result column="POWER_START" property="powerStart"/>
		<result column="POWER_END" property="powerEnd"/>
		<result column="PONO" property="poNo1"/>
	</resultMap>
	
	<!-- Rooms테이블 + Roomspay테이블 -->
	<resultMap type="Room" id="roomAndRoomspayResultSet">
		<id column="RONO" property="roNo"/>
		<result column="USNO" property="userNo"/>
		<result column="ROOMS_TITLE" property="roomsTitle"/>
		<result column="MIN_PEOPLE" property="minPeople"/>
		<result column="MAX_PEOPLE" property="maxPeople"/>
		<result column="PRICE" property="price"/>
		<result column="ADD_PRICE" property="addPrice"/>
		<result column="ROOMS_NOTICE" property="roomsNotice"/>
		<result column="ROOMS_TAG" property="roomsTag"/>
		<result column="ROOM_COUNT" property="roomCount"/>
		<result column="BED_COUNT" property="bedCount"/>
		<result column="BATH_COUNT" property="bathCount"/>
		<result column="RESTROOM_COUNT" property="restroomCount"/>
		<result column="FACILITY" property="facility"/>
		<result column="SERVICE" property="service"/>
		<result column="MEAL" property="meal"/>
		<result column="DENY" property="deny"/>
		<result column="DENY_CONTENT" property="denyContent"/>
		<result column="ADD_BASIC" property="addBasic"/>
		<result column="ADD_DETAIL" property="addDetail"/>
		<result column="ADD_REF" property="addRef"/>
		<result column="ZIP_CODE" property="zipCode"/>
		<result column="APPLY_DATE" property="applyDate"/>
		<result column="START_DATE" property="startDate"/>
		<result column="END_DATE" property="endDate"/>
		<result column="OPERATE_DAY" property="operateDay"/>
		<result column="PONO" property="poNo"/>
		<result column="POWER_START" property="powerStart"/>
		<result column="POWER_END" property="powerEnd"/>
		<result column="STATUS" property="status"/>
		<result column="CHECK_IN" property="checkIn"/>
		<result column="CHECK_OUT" property="checkOut"/>
		<result column="DEADLINE" property="deadline"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="ROOMS_NOTICE" property="roomsNotice"/>
		
		<result column="USER_NAME" property="userName"/>
		<result column="RPNO" property="rpNo"/>
		<result column="AMOUNT" property="amount"/>
		<result column="BIRTHDATE" property="birthday"/>
		<result column="PAY_DATE" property="payDate"/>
		<result column="ADD_POINT" property="addPoint"/>
		<result column="PHONE" property="phone"/>
		
		<result column="RESERVE_STATUS" property="reserveStatus"/>
		<result column="USE_POINT" property="usePoint"/>
		<result column="PEOPLE" property="people"/>
		<result column="CONCEPT" property="concept"/>
		<result column="REQUEST" property="request"/>
		<result column="START_DAYS" property="startDays"/>
		<result column="END_DAYS" property="endDays"/>
		<result column="DAYS" property="days"/>
	</resultMap>
	
	<!-- Attachment테이블 -->
	<resultMap type="Attachment" id="attachmentResultSet">
		<id column="FINO" property="fiNo"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="UPLOAD_DATE" property="uploadDate"/>
		<result column="STATUS" property="status"/>
		<result column="CATEGORY" property="category"/>
		<result column="RONO" property="roNo"/>
		<result column="EXNO" property="exNo"/>
	</resultMap>
	
	<!-- Review테이블 + Member테이블 + Partner테이블 -->
	<resultMap type="Room" id="reviewAndMemberResultSet">
		<id column="RENO" property="reNo"/>
		<result column="RONO" property="roNo"/>
		<result column="USNO" property="userNo"/>
		<result column="USER_NAME" property="userName"/>
		<result column="REVIEW_TITLE" property="reTitle"/>
		<result column="REVIEW_CONTENT" property="reContent"/>
		<result column="CREATE_DATE" property="reviewDate"/>
		<result column="SCORE" property="score"/>
		<result column="REPLY" property="reply"/>
		<result column="REPLY_DATE" property="replyDate"/>
		<result column="REPLY_STATUS" property="replyStatus"/>
		<result column="STATUS" property="statusString"/>
		<result column="ORIGIN_NAME" property="usOriginName"/>
		<result column="CHANGE_NAME" property="usChangeName"/>
	</resultMap>
	
	<resultMap id="selectRoomPayList" type="RoomPay">
		<id column="RENO" property="reNo"/>
		<result column="RPNO" property="rpNo"/>
		<result column="RONO" property="roNo"/>
		<result column="USNO" property="userNo"/>
		<result column="AMOUNT" property="amount"/>
		<result column="BIRTHDATE" property="brithDate"/>
		<result column="PAY_DATE" property="payDate"/>
		<result column="ADD_POINT" property="addPoint"/>
		<result column="CHECK_IN" property="checkIn"/>
		<result column="RESERVE_STATUS" property="reserveStatus"/>
		<result column="USE_POINT" property="usePoint"/>
		<result column="PEOPLE" property="people"/>
		<result column="CONCEPT" property="concept"/>
		<result column="REQUEST" property="request"/>
		<result column="START_DAYS" property="startDays"/>
		<result column="END_DAYS" property="endDays"/>
		<result column="ROOMS_TITLE" property="roomsTitle"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="EXP_CLASS_NO" property="expClassNo"/>
	</resultMap>
	
	<select id="selectListCount" resultType="_int" parameterType="_int">
		select count(*)
		  from rooms
		 where usno = #{userNo}
	</select>
	
	<select id="selectRoomsList" resultMap="roomResultSet" parameterType="_int">
		select *
	      from rooms 
	     where usno = #{userNo}
	     order by status asc
	</select>
	
	<select id="selectRoom" resultMap="roomResultSet" parameterType="_int">
		select *
		  from rooms
		 where rono = #{roNo}
	</select>
	
	<!-- 숙소등록 -->
	<insert id="insertRoom" parameterType="Room">
		insert into rooms
		values(rono.nextval, #{userNo}, #{roomsTitle}, #{minPeople}, #{maxPeople}, #{price}, 10000, #{roomsTag}, 
				#{roomCount}, #{bedCount}, #{bathCount}, #{restroomCount}, #{facility}, #{service}, 
				#{meal}, null, null, #{addBasic}, #{addDetail},
			   #{addRef}, #{zipCode}, sysdate, null, null, null, null, null, null, 2, #{checkIn}, #{checkOut}, #{deadline},
			   #{originName}, #{changeName}, #{filePath}, #{roomsNotice})
	</insert>
	
	<!-- 숙소rono -->
	<select id="selectRono" resultType="_int">	
		select rono
	      from rooms
	     where rownum = 1
	     order by rono desc
	</select>
	
	<!-- 숙소등록 상세이미지  -->
	<insert id="insertAttachment" parameterType="Attachment">
		insert into attachment
		values(fino.nextval, #{originName}, #{changeName}, #{filePath}, sysdate, 'Y', 1, rono.currval, null)
	</insert>
	
	<!-- 숙소번호에 해당하는 숙소 상세사진 조회 -->
	<select id="selectAt" resultMap="attachmentResultSet" parameterType="_int">
		select * 
		  from attachment
		 where rono=#{roNo}
	</select>
	
	<!-- 숙소객체 업데이트 -->
	<update id="updateRoom" parameterType="Room" >
		update rooms
		   set rooms_title=#{roomsTitle}, min_people=#{minPeople}, max_people=#{maxPeople},
		   	   price=#{price}, rooms_tag=#{roomsTag}, room_count=#{roomCount},
		   	   bed_count=#{bedCount}, bath_count=#{bathCount}, restroom_count=#{restroomCount},
		   	   facility=#{facility}, service=#{service}, meal=#{meal}, deadline=#{deadline}, 
		   	   add_basic=#{addBasic}, add_detail=#{addDetail}, add_ref=#{addRef}, zip_code=#{zipCode}, 
			   check_in=#{checkIn}, check_out=#{checkOut}, rooms_notice=#{roomsNotice},
			   origin_name=#{originName}, change_name=#{changeName}, file_path=#{filePath}
		 where rono=#{roNo}
	</update>
	
	<!-- 숙소상세사진 업데이트  -->
	<update id="updateAt" parameterType="Attachment" >
		insert into attachment
		values(fino.nextval, #{originName}, #{changeName}, #{filePath}, sysdate, 'Y', 2, null, #{exNo})
	</update>
	
	<!-- 승인거절된 숙소객체 업데이트  -->
	<update id="updateReRoom" parameterType="Room" >
		update rooms
		   set rooms_title=#{roomsTitle}, min_people=#{minPeople}, max_people=#{maxPeople},
		   	   price=#{price}, rooms_tag=#{roomsTag}, room_count=#{roomCount},
		   	   bed_count=#{bedCount}, bath_count=#{bathCount}, restroom_count=#{restroomCount},
		   	   facility=#{facility}, service=#{service}, meal=#{meal}, deadline=#{deadline}, 
		   	   add_basic=#{addBasic}, add_detail=#{addDetail}, add_ref=#{addRef}, zip_code=#{zipCode}, 
			   check_in=#{checkIn}, check_out=#{checkOut}, rooms_notice=#{roomsNotice},
			   origin_name=#{originName}, change_name=#{changeName}, file_path=#{filePath},
		 	   status=2, deny=null, deny_content=null
		 where rono=#{roNo}
	</update>
	
	<delete id="deleteAt" parameterType="string">
		DELETE FROM ATTACHMENT
		WHERE CHANGE_NAME = #{deList}
	</delete>
	
	<update id="deleteRoom" parameterType="_int">
		update rooms
		   set status=5
	     where rono=#{roNo}
	</update>
	
	<update id="restRoom" parameterType="_int">
		update rooms
		   set status=4
	     where rono=#{roNo}
	</update>
	
	<update id="endRestRoom" parameterType="_int">
		update rooms
		   set status=1
	     where rono=#{roNo}
	</update>
	
	
	<!-- 숙소관리 >파워등록 -->
	<select id="selectRoomOkeyListCount" resultType="_int" parameterType="_int">
		select count(*) 
		  from rooms
		 where usno=#{usNo} and status=1
	</select>
	
	<select id="selectOkeyList" resultMap="roomAndRoomspayResultSet" parameterType="_int">
		select r.status, r.rooms_title, r.usno, r.rono, r.add_basic,
			   count(p.rono) as totalSal
	      from rooms r
	      left join roomspay p on (r.rono=p.rono)
	     where r.status=1 and r.pono is null
	     group by r.status, r.rooms_title, r.usno, r.rono, r.add_basic
	    having r.usno = #{userNo}
	     order by totalSal desc
	</select>
	
	<update id="updateRoomPower" parameterType="Room">
		update rooms
		   set pono=#{poNo}, power_start=#{powerStart}, power_end=#{powerEnd}
	     where rono=#{roNo}
	</update>
	<!-- // 숙소관리 >파워등록 -->
	
	
	
	<!-- 파워관리 시작-->
	<select id="selectPowerList" resultMap="powerResultSet">
		select *
	      from power
	     order by price asc
	</select>
	
		
	<insert id="insertPower" parameterType="Room">
		insert into power
		values(pono.nextval, #{powerKind}, #{period}, #{powerPrice})
		
	</insert>
	
	<update id="updatePower" parameterType="Room">
	
		update power
		   set POWER_KIND=#{powerKind},
		       PERIOD=#{period},
		       PRICE=#{powerPrice}
		 where pono=#{poNo}
	
	</update>
	
	<select id="selectPower" parameterType="_int" resultMap="powerResultSet">
		select *
		  from power
		 where pono= #{pno}
	      
	</select>
	
	<select id="aSelectPowerListCount" resultType="_int">
		select count(*)
		  from POWER P
		  JOIN ROOMS R ON r.pono = p.pono
		  JOIN MEMBER M ON r.usno = m.usno
		 WHERE R.PONO > 0
	</select>
	
	<select id="selectPowerRoomList" resultMap="powerResultSet">
	
	
		select P.PONO, P.POWER_KIND, R.ROOMS_TITLE, M.EMAIL, P.PERIOD, R.POWER_START, R.POWER_END, R.PONO
		  FROM POWER P
		  JOIN ROOMS R ON r.pono = p.pono
		  JOIN MEMBER M ON r.usno = m.usno
		 WHERE R.PONO > 0 and R.POWER_END >= SYSDATE
		
	
	</select>
	<!-- 파워관리 시작-->
	
	
	<!-- 숙소관리 시작-->
	
	<select id="selectListRoomsWaitCount" resultType="_int">
		select count(*)
		  from rooms
		 where status = 2
	</select>
	
	<select id="selectRoomsWaitList" resultMap="roomResultSet">
		select *
		  from rooms
		 where status = 2
	</select>
	
	<select id="selectListRoomsOkayCount" resultType="_int">
		select count(*)
		  from rooms
		 where status = 1
	</select>
	
	<select id="selectRoomsOkayList" resultMap="roomResultSet">
		select *
		  from rooms
		 where status = 1
	</select>
	
		<select id="selectRoomWaitDetail" resultMap="roomResultSet" parameterType="_int">
		select *
		  from rooms
		 where rono = #{rno}
	</select>
	
	<update id="updateOkay" parameterType="_int">
	
		update rooms
		   set STATUS = 1, START_DATE = SYSDATE
		 where RONO=#{rno}
	
	</update>
	
	<update id="updateReject" parameterType="Room">
	
		update rooms
		   set STATUS = 3,
		       DENY=#{deny},
		       DENY_CONTENT=#{denyContent}
		 where RONO=#{roNo}
	
	</update>
	
	<select id="roomSearchCount" parameterType="Room" resultType="_int">
		select count(*)
		  from rooms
		 where status = 1
		 <if test="searchSelect == 'searchOp1'">
			and ROOMS_TITLE LIKE '%' || #{keyword} ||'%'
		</if>
		<if test="searchSelect == 'searchOp2'">
			and ADD_BASIC LIKE '%' || #{keyword} ||'%'
		</if>
	</select>
	
	<select id="roomSearchList" parameterType="Room" resultMap="roomResultSet">
		select *
		  from rooms
		 where status = 1
		<if test="searchSelect == 'searchOp1'">
			and ROOMS_TITLE LIKE '%' || #{keyword} ||'%'
		</if>
		<if test="searchSelect == 'searchOp2'">
			and ADD_BASIC LIKE '%' || #{keyword} ||'%'
		</if>
	</select>
	
	<select id="selectRoomList" resultMap="roomResultSet">
	  select *
        from rooms 
       where pono is null
	</select>
	
	<select id="selectPopList" resultMap="roomResultSet">
        SELECT rono, rooms_title, add_basic, change_Name
        FROM(select RP.rono, rooms_title, add_basic, change_Name , count(*), ROW_NUMBER() OVER (ORDER BY count(*) DESC) AS RECENT_ME
	        from ROOMSPAY RP
            left join rooms r on(rp.rono = r.rono)
	        group by rp.rono, r.rooms_title, r.add_basic, rooms_title, add_basic,change_Name)
        <![CDATA[where rownum <= 10]]>
	</select>
	<!-- 숙소관리 끝-->

	<!-- 숙소조회 시작 -->
	<select id="selectRoomSearch" parameterType="Room" resultMap="roomAndRoomspayResultSet">
		SELECT *
		  FROM ROOMS
		 WHERE RONO NOT IN (
		                    SELECT R.RONO
		                    FROM ROOMS R
		                    JOIN ROOMSPAY P ON(R.RONO = P.RONO)
		                    WHERE ((#{startDays} BETWEEN P.START_DAYS AND (P.END_DAYS-1))
		                        or (#{endDays} BETWEEN (P.START_DAYS+1) AND P.END_DAYS))
							)
          AND (#{people} BETWEEN MIN_PEOPLE AND MAX_PEOPLE)
          AND ((ADD_BASIC LIKE '%' || #{addBasic} || '%') OR (ADD_REF LIKE '%' || #{addBasic} || '%'))
        ORDER BY RONO
	</select>

	<select id="selectDetailImages" parameterType="_int" resultMap="attachmentResultSet">
		SELECT *
		 FROM ATTACHMENT
		WHERE RONO = #{roNo}
	</select>
	
	<select id="selectReviewList" parameterType="_int" resultMap="reviewAndMemberResultSet">
		SELECT *
		  FROM REVIEW
		  LEFT JOIN MEMBER USING (USNO)
		  LEFT JOIN PARTNER USING (PANO)
		 WHERE RONO=#{roNo}
	</select>

	<!-- 숙소조회 끝 -->


	<!-- 예약관리 -->
	<!-- 페이징바 -->
	<!-- 확정전 -->
	<select id="selectRvRoomListCount" parameterType="_int" resultType="_int">
		select count(*)
		  from roomspay
		 where rono in (select rono 
		                from rooms
		                where usno= #{userNo})
		  and reserve_status = 1
	</select>
	<!-- 확정후 -->
	<select id="selectRvRoomConfirmListCount" parameterType="_int" resultType="_int">
		select count(*)
		  from roomspay
		 where rono in (select rono 
		                from rooms
		                where usno= #{userNo})
		  and reserve_status in (2, 3)
	</select>
	<!-- 취소 -->
	<select id="selectRvRoomCancelListCount" parameterType="_int" resultType="_int">
		select count(*)
		  from roomspay
		 where rono in (select rono 
		                from rooms
		                where usno= #{userNo})
		  and reserve_status = 4
	</select>
	<!-- 기본 리스트 -->
	<select id="selectRvRoomList" parameterType="_int" resultMap="roomAndRoomspayResultSet">
		select rp.rpno, m.user_name ,rp.rono, rp.usno, amount, birthdate, pay_date, rp.check_in, reserve_status, people, 
			       concept, request, start_days, end_days, rooms_title, meal, m.change_name
		  from roomspay rp
		  join rooms r on (r.rono = rp.rono)
		  join member m on (m.usno = rp.usno)
		 where rp.rono in (select r.rono 
			                from rooms
			                where usno =  #{userNo})
		 and reserve_status = 1
		order by rp.rpno desc
	</select>
	
	<!-- 예약확정 리스트-->
	<select id="selectRvRoomConfirmList" parameterType="_int" resultMap="roomAndRoomspayResultSet">
		select rp.rpno, m.user_name ,rp.rono, rp.usno, amount, birthdate, pay_date, rp.check_in, reserve_status, people, 
			       concept, request, start_days, end_days, rooms_title, meal, m.change_name
		  from roomspay rp
		  join rooms r on (r.rono = rp.rono)
		  join member m on (m.usno = rp.usno)
		 where rp.rono in (select r.rono 
			                from rooms
			                where usno =  #{userNo})
	      and reserve_status in (2, 3)
	     order by rp.rpno desc
	</select>
	<!-- 예약취소 리스트-->
	<select id="selectRvRoomCancelList" parameterType="_int" resultMap="roomAndRoomspayResultSet">
		select rp.rpno, m.user_name ,rp.rono, rp.usno, amount, birthdate, pay_date, rp.check_in, reserve_status, people, 
			       concept, request, start_days, end_days, rooms_title, meal, m.change_name
		  from roomspay rp
		  join rooms r on (r.rono = rp.rono)
		  join member m on (m.usno = rp.usno)
		 where rp.rono in (select r.rono 
			                from rooms
			                where usno =  #{userNo})
	      and reserve_status = 4
	     order by rp.rpno desc
	</select>

	<select id="reservationRoomDetailView" parameterType="_int" resultMap="roomAndRoomspayResultSet">
		select rp.reserve_status, rp.rpno, rooms_title, start_days, end_days, 
			   user_name, rp.people, birthdate, phone, TRUNC(TO_DATE(END_DAYS))-TO_DATE(START_DAYS) as days, concept, request,
			   amount
		  from roomspay rp
		  join member m on (rp.usno = m.usno)
		  join rooms r on (rp.rono = r.rono)
		 where rp.rpno = #{roNo}
	</select>

	<!-- 예약확정 -->
	<update id="roomConfirm" parameterType="_int">
		update roomspay 
		   set reserve_status = 2
		 where rpno = #{rpNo}
	</update>
	
	<!-- 예약취소 -->
	<update id="roomCancel" parameterType="_int">
		update roomspay 
		   set reserve_status = 4
		 where rpno = #{rpNo}
	</update>

	
	<!-- 마이페이지 -->

	<select id="selectRoomPayList" resultMap="selectRoomPayList" parameterType="Member">
	  select RPNO, p.RONO, p.USNO, p.AMOUNT, p.BIRTHDATE, p.PAY_DATE, p.ADD_POINT, p.CHECK_IN, p.RESERVE_STATUS, p.USE_POINT, p.PEOPLE, p.CONCEPT, p.REQUEST, p.START_DAYS, p.END_DAYS,  r.ROOMS_TITLE,r.CHANGE_NAME 
		  from roomspay p
          left join rooms r on(p.rono = r.rono)
         where p.usno = #{usNo}
	</select>









</mapper>
