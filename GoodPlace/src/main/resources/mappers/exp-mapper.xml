<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="expMapper">

	<resultMap type="Experience" id="ExperienceResultSet">
		<id column="exno" property="exNo"/>
		<result column="usno" property="usNo"/>
		<result column="language" property="language"/>
		<result column="exp_category" property="expCategory"/>
		<result column="exp_tag" property="expTag"/>
		<result column="exp_title" property="expTitle"/>
		<result column="exp_content" property="expContent"/>
		<result column="activity" property="activity"/>
		<result column="max_people" property="maxPeople"/>
		<result column="exp_date" property="expDate"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="use_time" property="useTime"/>
		<result column="interval_time" property="intervalTime"/>
		<result column="supplies" property="supplies"/>
		<result column="deadline" property="deadline"/>
		<result column="price" property="price"/>
		<result column="add_basic" property="addBasic"/>
		<result column="add_detail" property="addDetail"/>
		<result column="add_ref" property="addRef"/>
		<result column="zip_code" property="zipCode"/>
		<result column="apply_date" property="applyDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="operate_day" property="operateDay"/>
		<result column="status" property="status"/>
		<result column="deny" property="deny"/>
		<result column="deny_content" property="denyContent"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		<result column="file_path" property="filePath"/>

		<result column="epno" property="epNo"/>
		<result column="amount" property="amount"/>
		<result column="pay_date" property="payDate"/>
		<result column="exp_date" property="expDate"/>
		<result column="people" property="people"/>
		
		<result column="change_name_1" property="atChangeName"/>
		
		<result column="exp_date" property="expDateString"/>
	</resultMap>
	
	<resultMap type="Attachment" id="AttachmentResultSet">
		<id column="fino" property="fiNo"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		<result column="file_path" property="filePath"/>
		<result column="upload_date" property="uploadDate"/>
		<result column="status" property="status"/>
		<result column="category" property="category"/>
		<result column="rono" property="roNo"/>
		<result column="exno" property="exNo"/>
	</resultMap>

	<!-- 체험 + 체험결제 -->
	<resultMap type="Experience" id="ExperiencePayResultSet">
		<id column="exno" property="exNo"/>
		<result column="usno" property="usNo"/>
		<result column="language" property="language"/>
		<result column="exp_category" property="expCategory"/>
		<result column="exp_tag" property="expTag"/>
		<result column="exp_title" property="expTitle"/>
		<result column="exp_content" property="expContent"/>
		<result column="activity" property="activity"/>
		<result column="max_people" property="maxPeople"/>
		<result column="exp_date" property="expDate"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="use_time" property="useTime"/>
		<result column="interval_time" property="intervalTime"/>
		<result column="supplies" property="supplies"/>
		<result column="deadline" property="deadline"/>
		<result column="price" property="price"/>
		<result column="add_basic" property="addBasic"/>
		<result column="add_detail" property="addDetail"/>
		<result column="add_ref" property="addRef"/>
		<result column="zip_code" property="zipCode"/>
		<result column="apply_date" property="applyDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="operate_day" property="operateDay"/>
		<result column="status" property="status"/>
		<result column="deny" property="deny"/>
		<result column="deny_content" property="denyContent"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		<result column="file_path" property="filePath"/>

		<result column="epno" property="epNo"/>
		<result column="amount" property="amount"/>
		<result column="pay_date" property="payDate"/>
		<result column="exp_date" property="expDate"/>
		<result column="people" property="people"/>
		
		<result column="change_name_1" property="atChangeName"/>
		
		<!-- 결제 걸럼 -->
		<result column="EPNO" property="epNo"/>
		<result column="AMOUNT" property="amount"/>
		<result column="PAY_DATE" property="payDate"/>
		<result column="EXP_DATE" property="expDateUser"/>
		<result column="PEOPLE" property="people"/>
		<result column="STATUS" property="statusExp"/>
	</resultMap>
	
	
	
	<!-- id="ExperienceResultSet" 와 다른점 : exp_date를 vo객체에 String 자료형으로 매핑시킨다. -->
	<resultMap type="Experience" id="ExperienceResultSetUser">
		<id column="exno" property="exNo"/>
		<result column="usno" property="usNo"/>
		<result column="language" property="language"/>
		<result column="exp_category" property="expCategory"/>
		<result column="exp_tag" property="expTag"/>
		<result column="exp_title" property="expTitle"/>
		<result column="exp_content" property="expContent"/>
		<result column="activity" property="activity"/>
		<result column="max_people" property="maxPeople"/>
		<result column="exp_date" property="expDateString"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="use_time" property="useTime"/>
		<result column="interval_time" property="intervalTime"/>
		<result column="supplies" property="supplies"/>
		<result column="deadline" property="deadline"/>
		<result column="price" property="price"/>
		<result column="add_basic" property="addBasic"/>
		<result column="add_detail" property="addDetail"/>
		<result column="add_ref" property="addRef"/>
		<result column="zip_code" property="zipCode"/>
		<result column="apply_date" property="applyDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="operate_day" property="operateDay"/>
		<result column="status" property="status"/>
		<result column="deny" property="deny"/>
		<result column="deny_content" property="denyContent"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		<result column="file_path" property="filePath"/>

		<result column="epno" property="epNo"/>
		<result column="amount" property="amount"/>
		<result column="pay_date" property="payDate"/>
		<result column="exp_date" property="expDate"/>
		<result column="people" property="people"/>
		
		<result column="change_name_1" property="atChangeName"/>
		
		<result column="user_name" property="paName"/>
	</resultMap>
	
	<resultMap id="selectExpPayList" type="ExpPay">
		<id column="EPNO" property="epNo"/>
		<result column="EXNO" property="exNo"/>
		<result column="USNO" property="usNo"/>
		<result column="AMOUNT" property="amount"/>
		<result column="PAY_DATE" property="payDate"/>
		<result column="EXP_DATE" property="expDate"/>
		<result column="PEOPLE" property="people"/>
		<result column="STATUS" property="status"/>
		<result column="EXP_TITLE" property="expTitle"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="SUPPLIES" property="supplies"/>
		<result column="USE_TIME" property="useTime"/>
		<result column="ADD_BASIC" property="addBasic"/>
	</resultMap>
	
	<!-- 사용자의 체험 전체 목록 조회  -->
	<select id="selectExpListCount" resultType="_int">
		select count(*)
		  from experience
		 where usno=#{usNo}
	</select>
	
	<!-- 패당 페이지에 보여줄 사용자의  체험 목록 조회 -->
	<select id="selectExpList" resultMap="ExperienceResultSet" parameterType="_int">
		select e.status, e.exp_Title, 
		       e.start_date, e.apply_date, e.usno, e.exno, e.add_basic, 
       		   count(p.exno) as totalSal
          from experience e
          left join expPay p on(e.exno=p.exno) 
  		 group by e.status, e.exp_Title, e.start_date, e.apply_date, 
  		 	   e.add_basic, e.usno, e.exno
		having e.usno= #{usNo}
		 order by status asc, totalSal desc
	</select>
	
	<!-- 체험 등록 -->
	<insert id="insertExp" parameterType="Experience">
		insert into experience
		values(exno.nextval, #{usNo}, #{language}, #{expCategory}, #{expTag}, #{expTitle},
			  #{activity}, #{maxPeople}, null, #{startTime}, #{endTime}, #{useTime}, #{intervalTime}, 
			  #{supplies}, #{deadline}, #{price}, #{addBasic}, #{addDetail}, #{addRef}, #{zipCode}, 
			  sysdate, null, null, null, 2, null, null, #{originName}, #{changeName}, #{filePath}, #{expContent},null)
	</insert>
	
	<!-- 체험 상세사진 등록 -->
	<insert id="insertAttachment" parameterType="Attachment">
		insert into attachment
		values(fino.nextval, #{originName}, #{changeName}, #{filePath}, sysdate, 'Y', 2, null, exno.currval)
	</insert>
	
	<!-- 체험 상세조회 -->
	<select id="selectExp" resultMap="ExperienceResultSet" parameterType="_int">
		select * 
		  from experience
		  left join attachment using (exno)
		 where exno=#{exNo}
	</select>
	
	<!-- 체험객체조회 -->
	<select id="selectExpOne" resultMap="ExperienceResultSet" parameterType="_int">
		select * 
		  from experience
		 where exno=#{exNo}
	</select>
	
	<!-- 체험번호에 해당하는 체험 상세사진 조회 -->
	<select id="selectAt" resultMap="AttachmentResultSet" parameterType="_int">
		select * 
		  from attachment
		 where exno=#{exNo}
	</select>
	
	<!-- 체험객체 업데이트 -->
	<update id="updateExp" parameterType="Experience">
		update experience 
   		   set language=#{language}, exp_category=#{expCategory}, exp_tag=#{expTag}, exp_title=#{expTitle}, 
      		   activity=#{activity}, max_people=#{maxPeople},start_time=#{startTime}, end_time=#{endTime}, 
      		   use_time=#{useTime}, interval_time=#{intervalTime}, supplies=#{supplies}, deadline=#{deadline}, 
      		   price=#{price}, add_basic=#{addBasic}, add_detail=#{addDetail}, add_ref=#{addRef}, zip_code=#{zipCode}, 
      		   origin_name=#{originName}, change_name=#{changeName}, file_path=#{filePath}, exp_content=#{expContent}
		 where exno=#{exNo}
	</update>

	<!-- 체험 상세사진 업데이트 : 기존사진들 다 지우고 새로 insert함 -->
	<update id="updateAt" parameterType="Attachment">
		insert into attachment
		values(fino.nextval, #{originName}, #{changeName}, #{filePath}, sysdate, 'Y', 2, null, #{exNo})
	</update>

	<!-- 승인거절된 체험객체 업데이트 -->
	<update id="updateReExp" parameterType="Experience">
		update experience 
   		   set language=#{language}, exp_category=#{expCategory}, exp_tag=#{expTag}, exp_title=#{expTitle}, 
      		   activity=#{activity}, max_people=#{maxPeople}, start_time=#{startTime}, end_time=#{endTime}, 
      		   use_time=#{useTime}, interval_time=#{intervalTime}, supplies=#{supplies}, deadline=#{deadline}, 
      		   price=#{price}, add_basic=#{addBasic}, add_detail=#{addDetail}, add_ref=#{addRef}, zip_code=#{zipCode}, 
      		   origin_name=#{originName}, change_name=#{changeName}, file_path=#{filePath}, exp_content=#{expContent},
      		   status=2, deny=null, deny_content=null
		 where exno=#{exNo}
	</update>
	
	<delete id="deleteAt" parameterType="string">
		DELETE FROM ATTACHMENT
		WHERE CHANGE_NAME = #{deList}
	</delete>

	<update id="restExp" parameterType="_int">
		update experience
		   set status=4
	     where exno=#{exNo}
	</update>
	
	<update id="deleteExp" parameterType="_int">
		update experience
		   set status=5
	     where exno=#{exNo}
	</update>
	
	<update id="endRestExp" parameterType="_int">
		update experience
		   set status=1
	     where exno=#{exNo}
	</update>
	

	<!-- 체험관리 시작 -->
	
	<select id="selectListExpWaitCount" resultType="_int">
		select count(*)
		  from EXPERIENCE
		 where status = 2
	</select>
	
	<select id="selectExpWaitList" resultMap="ExperienceResultSet">
		select *
		  from EXPERIENCE
		 where status = 2
	</select>
	
	<select id="selectListExpOkayCount" resultType="_int">
		select count(*)
		  from EXPERIENCE
		 where status = 1
	</select>
	
	<select id="selectExpOkayList" resultMap="ExperienceResultSet">
		select *
		  from EXPERIENCE
		 where status = 1
	</select>
	
	
	<select id="selectExpmWaitDetail" resultMap="ExperienceResultSet" parameterType="_int">
		select *
		  from EXPERIENCE
		 where exno = #{eno}
	</select>
	
	<update id="updateOkay" parameterType="_int">
	
		update EXPERIENCE
		   set STATUS = 1
		 where exno=#{eno}
	
	</update>
	
	<update id="updateReject" parameterType="Experience">
	
		update EXPERIENCE
		   set STATUS = 3,
		       DENY=#{deny},
		       DENY_CONTENT=#{denyContent}
		 where exno=#{exNo}
	
	</update>
	
	<select id="expSearchCount" parameterType="Experience" resultType="_int">
		select count(*)
		  from EXPERIENCE
		 where status = 1
		<if test="searchSelect == 'searchOp1'">
			and EXP_TITLE LIKE '%' || #{keyword} ||'%'
		</if>
		<if test="searchSelect == 'searchOp2'">
			and ADD_BASIC LIKE '%' || #{keyword} ||'%'
		</if>
	</select>
	
	<select id="expSearchList" parameterType="Experience" resultMap="ExperienceResultSet">
		select *
		  from EXPERIENCE
		 where status = 1
		<if test="searchSelect == 'searchOp1'">
			and EXP_TITLE LIKE '%' || #{keyword} ||'%'
		</if>
		<if test="searchSelect == 'searchOp2'">
			and ADD_BASIC LIKE '%' || #{keyword} ||'%'
		</if>
	</select>
	<!-- 체험관리 끝 -->
	
	<!-- ////////////////// 예약관리 시작 ////////////////// -->
	<!-- 확정전 -->
	<select id="selectRvExpListCount" parameterType="_int" resultType="_int">
		select count(*)
		  from exppay ep
		 where exno in (select exno
		                  from experience ex
		                 where usno = #{userNo})
		and status = 1
	</select>
	<!-- 확정후 -->
	<select id="selectRvExpConfirmListCount" parameterType="_int" resultType="_int">
		select count(*)
		  from exppay ep
		 where exno in (select exno
		                  from experience ex
		                 where usno = #{userNo})
		and status in (2, 3)
	</select>
	<!-- 취소 -->
	<select id="selectRvExpCancelListCount" parameterType="_int" resultType="_int">
		select count(*)
		  from exppay ep
		 where exno in (select exno
		                  from experience ex
		                 where usno = #{userNo})
		and status = 4
	</select>
	
	<select id="selectRvExpList" parameterType="_int" resultMap="ExperiencePayResultSet" >
		select epno, ex.exno, user_name, amount, pay_date, ep.exp_date, people, ep.status,
     		   exp_category, exp_title, use_time, add_basic, exp_content
		  from exppay ep
		  join experience ex on (ex.exno = ep.exno)
		  join member m on (m.usno = ep.usno)
		 where ep.exno in (select ex.exno 
		                from experience
		                where usno = #{userNo})
		   and ep.status = 1
		   order by ep.epno desc
	</select>
	<!-- 예약확정 리스트-->
	<select id="selectRvExpConfirmList" parameterType="_int" resultMap="ExperiencePayResultSet" >
		select epno, ex.exno, user_name, amount, pay_date, ep.exp_date, people, ep.status,
     		   exp_category, exp_title, use_time, add_basic, exp_content
		  from exppay ep
		  join experience ex on (ex.exno = ep.exno)
		  join member m on (m.usno = ep.usno)
		 where ep.exno in (select ex.exno 
		                from experience
		                where usno = #{userNo})
		   and ep.status in (2, 3)
		   order by ep.epno desc
	</select>
	<!-- 예약취소 리스트-->
	<select id="selectRvExpCancelList" parameterType="_int" resultMap="ExperiencePayResultSet" >
		select epno, ex.exno, user_name, amount, pay_date, ep.exp_date, people, ep.status,
     		   exp_category, exp_title, use_time, add_basic, exp_content
		  from exppay ep
		  join experience ex on (ex.exno = ep.exno)
		  join member m on (m.usno = ep.usno)
		 where ep.exno in (select ex.exno 
		                from experience
		                where usno = #{userNo})
		   and ep.status = 4
		   order by ep.epno desc
	</select>
	
	<select id="reservationExpDetailView" parameterType="_int" >
		select 
		  from
		where epno = #{epNo}
	</select>
	
	
	
	<!--/////////////////// 예약관리 끝 //////////////////-->

	<!-- 체험조회 시작 -->
	<select id="selectExpListUser" parameterType="Experience" resultMap="ExperienceResultSetUser">
		SELECT *
		  FROM EXPERIENCE
		  LEFT JOIN EXPPAY USING(EXNO)
		 WHERE EXP_CATEGORY=#{expCategory}
           AND ((EXP_TITLE LIKE '%' || #{expTitle} || '%') OR (EXP_TAG LIKE '%' || #{expTitle} || '%'))
         ORDER BY EXNO
	</select>
	
	<select id="selectExpCountUser" resultType="_int">
		SELECT COUNT(*)
		  FROM EXPERIENCE
		 GROUP BY EXP_CATEGORY
		 ORDER BY EXP_CATEGORY
	</select>
	
	
	<select id="selectExpUser" parameterType="_int" resultMap="ExperienceResultSetUser">
		SELECT *
		  FROM EXPERIENCE E
          LEFT JOIN MEMBER M USING(USNO)
          LEFT JOIN PARTNER P USING (PANO)
		 WHERE EXNO=#{exNo}
	</select>
	
	<!-- 체험조회 끝 -->
	
	
	
	
	<!-- 마이페이지 -->
	<select id="selectExpPayList" resultMap="selectExpPayList" parameterType="Member">
    select EPNO, ep.EXNO, ep.USNO, ep.AMOUNT, ep.PAY_DATE, ep.EXP_DATE, ep.PEOPLE, ep.STATUS, ex.EXP_TITLE, EX.CHANGE_NAME, EX.SUPPLIES, EX.USE_TIME, EX.ADD_BASIC
	  from exppay ep
	  join experience ex on (ep.exno = ex.exno)
     where ep.usno = #{usNo}
	</select>
</mapper>
